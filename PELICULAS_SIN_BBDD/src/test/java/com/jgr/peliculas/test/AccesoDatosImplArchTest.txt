/**
 * 
 */
package com.jgr.peliculas.test;

import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertThrows;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.junit.jupiter.api.Assertions.fail;

import java.util.ArrayList;
import java.util.List;

import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

import com.jgr.peliculas.datos.AccesoDatosImplArch;
import com.jgr.peliculas.datos.IAccesoDatos;
import com.jgr.peliculas.domain.Pelicula;
import com.jgr.peliculas.excepciones.AccesoDatosEx;
import com.jgr.peliculas.excepciones.EscrituraDatosEx;
import com.jgr.peliculas.excepciones.LecturaDatosEx;

/**
 * @author DARTH_VADER
 *
 */
class AccesoDatosImplArchTest {
	
	IAccesoDatos accesoDatos;
	private Pelicula peli;
	private List<Pelicula> peliculas;
	private final String nomFichero2 = "c:\\\\catalogoPeliculas\\\\peliculas.txt";
	private final String nomFichero = "peliculas.txt";
	private static final int NUM_MAX_LISTA =10;

	/**
	 * @throws java.lang.Exception
	 */
	@BeforeAll
	static void setUpBeforeClass() throws Exception {
		 
	}

	/**
	 * @throws java.lang.Exception
	 */
	@AfterAll
	static void tearDownAfterClass() throws Exception {
	}

	/**
	 * @throws java.lang.Exception
	 */
	@BeforeEach
	@DisplayName("estoy en BeforeEach")
	void setUp() throws Exception {
		//pongo primero la interfaz,pero lo que creo es la clase en si
		accesoDatos = new AccesoDatosImplArch();
		peliculas = new ArrayList<Pelicula>();		
		for (int i=0;i<NUM_MAX_LISTA ;i++) {
			peli =new Pelicula("Peli"+ i);
			peliculas.add(peli);
			//System.out.println(peliculas.get(i).toString());
			
		}
	}

	/**
	 * @throws java.lang.Exception
	 */
	@AfterEach
	void tearDown() throws Exception {
	}

	/**
	 * Test method for {@link com.jgr.peliculas.datos.AccesoDatosImplArch#existe(java.lang.String)}.
	 */
	@Test
	@DisplayName("estoy en testExiste")
	void testExiste() throws Exception {
		accesoDatos.crear(nomFichero);
		assertTrue(accesoDatos.existe(nomFichero),()->"no existe el fichero y lo acabo de crear"+ nomFichero);
//		fail("Not yet implemented");
	}

	/**
	 * Test method for {@link com.jgr.peliculas.datos.AccesoDatosImplArch#listar(java.lang.String)}.
	 * @throws Exception 
	 * @throws LecturaDatosEx 
	 */
	@Test
	void testListar() throws LecturaDatosEx, Exception {
		
		List<Pelicula> peliculas = new ArrayList<Pelicula>();
		
		peliculas=accesoDatos.listar(nomFichero);
	}

	/**
	 * Test method for {@link com.jgr.peliculas.datos.AccesoDatosImplArch#escribir(com.jgr.peliculas.domain.Pelicula, java.lang.String, boolean)}.
	 */
	@Test
	void testEscribir()  throws Exception{
		accesoDatos.borrar(nomFichero);
		accesoDatos.crear(nomFichero);
		
	
		for (int i=0;i<NUM_MAX_LISTA;i++) {
			System.out.println(peliculas.get(i).toString());
			accesoDatos.escribir(peliculas.get(i), nomFichero, true);
		}
		
		
		
		List<Pelicula> peliculas2= new ArrayList<Pelicula>();
		
		peliculas2=accesoDatos.listar(nomFichero);
		
		for (int i=0;i<NUM_MAX_LISTA;i++) {
		System.out.println(peliculas2.get(i));
		}
		
		
		
		//fail("Not yet implemented");
	}

	/**
	 * Test method for {@link com.jgr.peliculas.datos.AccesoDatosImplArch#buscar(java.lang.String, com.jgr.peliculas.domain.Pelicula)}.
	 */
	@Test
	void testBuscar() {
		fail("Not yet implemented");
	}

	/**
	 * Test method for {@link com.jgr.peliculas.datos.AccesoDatosImplArch#crear(java.lang.String)}.
	 * 
	 */
	@Test
	@DisplayName("estoy en testCrear")
	void testCrear() throws Exception {	
		//esta es un poco tonta, no se debe producir el error,solo estoy probando el msg que saca cuando casca
		Exception exception2 = assertThrows(EscrituraDatosEx.class, () -> {accesoDatos.crear(nomFichero2);});	
		String excepcionStr = exception2.getMessage();
		String excepcion2Str ="error crear archivo salida :c:\\catalogoPeliculas\\peliculas.txt (El sistema no puede encontrar la ruta especificada) null";		
		assertTrue(excepcionStr.equalsIgnoreCase(excepcion2Str), () -> 
		"No coincide el mensaje de error " + excepcionStr +"/"+excepcion2Str);
		
		//ahora creo un fichero y verifico que existe
		accesoDatos.crear(nomFichero);
		assertTrue(accesoDatos.existe(nomFichero),()->"no existe el fichero "+ nomFichero);
		accesoDatos.borrar(nomFichero);// lo borro
		
		
	}

	/**
	 * Test method for {@link com.jgr.peliculas.datos.AccesoDatosImplArch#borrar(java.lang.String)}.
	 */
	@Test
	@DisplayName("estoy en testBorrar")
	void testBorrar()  throws Exception{
		//fail("Not yet implemented");
		accesoDatos.crear(nomFichero);
		assertTrue(accesoDatos.existe(nomFichero),()->"no existe el fichero "+ nomFichero);
		accesoDatos.borrar(nomFichero);// lo borro
		assertTrue(accesoDatos.existe(nomFichero),()->"lo he borrado y existe "+ nomFichero);

		
		
	}

}
